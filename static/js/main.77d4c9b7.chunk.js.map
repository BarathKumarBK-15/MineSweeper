{"version":3,"sources":["logo.svg","Minesweeper/Minesweeper.jsx","App.js","reportWebVitals.js","index.js"],"names":["Minesweeper","props","state","array","tiles","score","this","resetMines","push","i","min","max","x","Math","floor","random","flag","length","console","log","setState","idx","checkmine","st","document","getElementsByClassName","innerHTML","style","margin","background","borderRadius","getElementById","display","y","x1","y1","x2","y2","x3","y3","x4","y4","x5","y5","x6","y6","x7","y7","x8","y8","count","validate","className","id","onClick","window","location","reload","map","value","process","React","Component","arr","j","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.77d4c9b7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport './Minesweeper.css';\n\nexport default class Minesweeper extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state={array:[],tiles:[],score:[]};\n    }\n\n    componentDidMount() \n    {\n        this.resetMines();\n    }\n\n    resetMines()\n    {\n        const array=[];\n        const tiles=[];\n        const score=[];\n        score.push(0);\n        for(let i=0;i<100;i++)\n        {\n            tiles.push('TRY ME:)');\n        }\n        var i=20;\n        while(i>0)\n        {\n            var x=randomin(0,99);\n            var flag=0;\n            for(let i=0;i<array.length;i++)\n            {\n                if(array[i]===x)\n                {\n                    flag=1;\n                    break;\n                }\n            }\n            if(flag===0)\n            {\n                i--;\n                array.push(x);\n            }\n        }\n        console.log(array);\n        this.setState({array,tiles,score});\n    }\n\n    process(idx)\n    {\n        const {array,tiles,score}=this.state;\n        var flag=checkmine(array,idx);\n        if(flag===1)\n        {\n            const t=document.getElementsByClassName('mine');\n            const st=t[idx];\n            st.innerHTML='BOMB!';\n            st.style.margin='2px';\n            st.style.background='red';\n            st.style.borderRadius='15px';\n            const c=document.getElementById('GameOver');\n            c.style.display='block';\n        }\n        else\n        {\n            score[0]+=1;\n            this.setState({array,tiles,score});\n            const t=document.getElementsByClassName('mine');\n            const st=t[idx];\n            var x=Math.floor(idx/10);\n            var y=idx%10;\n            var x1=x-1;\n            var y1=y-1;\n            var x2=x-1;\n            var y2=y;\n            var x3=x-1;\n            var y3=y+1;\n            var x4=x;\n            var y4=y+1;\n            var x5=x+1;\n            var y5=y+1;\n            var x6=x+1;\n            var y6=y;\n            var x7=x+1;\n            var y7=y-1;\n            var x8=x;\n            var y8=y-1;\n            var count=0;\n            if(validate(x1,y1)===1)\n            {\n                console.log(x1+' '+y1);\n                count+=checkmine(array,x1*10+y1);\n            }\n            if(validate(x2,y2)===1)\n            {\n                console.log(x2+' '+y2);\n                count+=checkmine(array,x2*10+y2);\n            }\n            if(validate(x3,y3)===1)\n            {\n                console.log(x3+' '+y3);\n                count+=checkmine(array,x3*10+y3);\n            }\n            if(validate(x4,y4)===1)\n            {\n                console.log(x4+' '+y4);\n                count+=checkmine(array,x4*10+y4);\n            }\n            if(validate(x5,y5)===1)\n            {\n                console.log(x5+' '+y5);\n                count+=checkmine(array,x5*10+y5);\n            }\n            if(validate(x6,y6)===1)\n            {\n                console.log(x6+' '+y6);\n                count+=checkmine(array,x6*10+y6);\n            }\n            if(validate(x7,y7)===1)\n            {\n                console.log(x7+' '+y7);\n                count+=checkmine(array,x7*10+y7);\n            }\n            if(validate(x8,y8)===1)\n            {\n                console.log(x8+' '+y8);\n                count+=checkmine(array,x8*10+y8);\n            }\n            st.innerHTML=count;\n            st.style.margin='2px';\n            st.style.background='green';\n            st.style.borderRadius='15px';\n        }\n    }\n\n    render() \n    {\n        const {array,tiles,score}=this.state;\n        return(\n            <div className=\"mine-container\">\n                <div id=\"GameOver\">{'OOPS:( GAME OVER'}\n                <br></br>\n                Score : {score[0]}\n                <br></br>\n                <button id=\"newgame\" onClick={()=>NG()}>NEW GAME</button>\n                <br></br></div>\n                {tiles.map((value,idx)=>(\n                <button className=\"mine\" key={idx} onClick={()=>this.process(idx)}>{value}\n                </button>))}\n                <br></br>\n                <br></br>\n                <div id=\"Score\">Score : {score[0]}</div>\n            </div>\n        );\n    }\n}\n\nfunction validate(x,y)\n{\n    if(x<0||x>9)\n    {\n        return 0;\n    }\n    if(y<0||y>9)\n    {\n        return 0;\n    }\n    return 1;\n}\n\nfunction randomin(min,max)\n{\n    return Math.floor(Math.random()*(max-min+1)+min);\n}\n\nfunction checkmine(arr,i)\n{\n    for(let j=0;j<arr.length;j++)\n    {\n        if(arr[j]===i)\n        {\n            return 1;\n        }\n    }\n    return 0;\n}\n\nfunction NG()\n{\n    window.location.reload();\n}","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport Minesweeper from './Minesweeper/Minesweeper';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Minesweeper></Minesweeper>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}